(()=>{"use strict";const t={};class e{constructor(t){t.length&&(this.elements=Array.from(t).map((t=>new e.Each(t,this.options))))}destroyEvents(){this.elements.forEach((t=>{t.destroyEvents()}))}setEvents(){this.elements.forEach((t=>{t.setEvents()}))}}e.Each=class{constructor(t){this.parent=t,this.elements=this.parent.querySelectorAll("[data-prlx]"),this.animation=this.animationFrame.bind(this),this.offset=0,this.value=0,this.smooth=t.dataset.prlxSmooth?Number(t.dataset.prlxSmooth):15,this.setEvents()}setEvents(){this.animationID=window.requestAnimationFrame(this.animation)}destroyEvents(){window.cancelAnimationFrame(this.animationID)}animationFrame(){const t=this.parent.getBoundingClientRect().top,e=this.parent.offsetHeight,s=window.innerHeight,i=t-s,a=t+e,n=this.parent.dataset.prlxCenter?this.parent.dataset.prlxCenter:"center";if(i<30&&a>-30)switch(n){case"top":this.offset=-1*t;break;case"center":this.offset=s/2-(t+e/2);break;case"bottom":this.offset=s-(t+e)}this.value+=(this.offset-this.value)/this.smooth,this.animationID=window.requestAnimationFrame(this.animation),this.elements.forEach((t=>{const e={axis:t.dataset.axis?t.dataset.axis:"v",direction:t.dataset.direction?t.dataset.direction+"1":"-1",coefficient:t.dataset.coefficient?Number(t.dataset.coefficient):5,additionalProperties:t.dataset.properties?t.dataset.properties:""};this.parameters(t,e)}))}parameters(t,e){"v"==e.axis?t.style.transform=`translate3D(0, ${(e.direction*(this.value/e.coefficient)).toFixed(2)}px,0) ${e.additionalProperties}`:"h"==e.axis&&(t.style.transform=`translate3D(${(e.direction*(this.value/e.coefficient)).toFixed(2)}px,0,0) ${e.additionalProperties}`)}},document.querySelectorAll("[data-prlx-parent]")&&(t.parallax=new e(document.querySelectorAll("[data-prlx-parent]")));let s=!1;setTimeout((()=>{if(s){let t=new Event("windowScroll");window.addEventListener("scroll",(function(e){document.dispatchEvent(t)}))}}),0),document.addEventListener("DOMContentLoaded",(()=>{const t=document.querySelectorAll(".animEl"),e=new IntersectionObserver(((t,e)=>{t.forEach((t=>{t.isIntersecting&&(t.target.classList.add("_play-anim"),e.unobserve(t.target))}))}),{root:null,rootMargin:"0px",threshold:.1});t.forEach((t=>e.observe(t)))})),window.FLS=!1})();